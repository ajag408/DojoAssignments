var _ = {
   map: function(arr, callback) {
     result = [];
     for(var i = 0; i<arr.length; i++){
       result.push(callback(arr[i]));
     }
     return result
   },

   reduce: function(arr, callback, memo) {
       for(var i = 0; i<arr.length; i++){
         memo = callback(memo, arr[i]);
       }
       return memo;
   },

   find: function(arr, callback) {
     for(var i = 0; i<arr.length; i++){
       if(callback(arr[i]))
     }
   },
   filter: function(arr, callback) {
     result = [];
     for(var i = 0; i<arr.length; i++){
       if(callback(arr[i]) === true){
         result.push(arr[i]);
       }
     }
     return result;
   },

   reject: function() {
     // code here;
   }
 }
// you just created a library with 5 methods!

var sum = _.reduce([1, 2, 3], function(memo, num){ return memo + num; }, 0);
console.log(sum);

var even = _.find([1, 2, 3, 4, 5, 6], function(num){ return num % 2 == 0; });
console.log(even);

var evens = _.filter([1, 2, 3, 4, 5, 6], function(num){ return num % 2 == 0; });
console.log(evens); // if things are working right, this will return [2,4,6].
